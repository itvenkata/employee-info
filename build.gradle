buildscript {
    // repository to resolve dependencies during the build
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}


plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.17.2'
    id "org.sonarqube" version "3.1.1"

}

group = 'com.tvc.employee'
version = getVersion()

def getVersion() {
    println("Build Number .....${buildNumber}")
    return "${buildNumber}"
}

sourceCompatibility = '1.8'


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //Swagger2
    //implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    testRuntimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}


jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        // html.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }
}

check.dependsOn jacocoTestReport

test {
    useJUnitPlatform()
}
